# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1160, 709)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.imageDisplayer = QtWidgets.QLabel(self.centralwidget)
        self.imageDisplayer.setText("")
        self.imageDisplayer.setObjectName("imageDisplayer")
        self.gridLayout.addWidget(self.imageDisplayer, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1160, 25))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuSetting = QtWidgets.QMenu(self.menubar)
        self.menuSetting.setObjectName("menuSetting")
        self.menu = QtWidgets.QMenu(self.menuSetting)
        self.menu.setObjectName("menu")
        self.menuImage_Processing = QtWidgets.QMenu(self.menubar)
        self.menuImage_Processing.setObjectName("menuImage_Processing")
        self.menu_2 = QtWidgets.QMenu(self.menuImage_Processing)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menuImage_Processing)
        self.menu_3.setObjectName("menu_3")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen_Image = QtWidgets.QAction(MainWindow)
        self.actionOpen_Image.setObjectName("actionOpen_Image")
        self.actionSave_Image = QtWidgets.QAction(MainWindow)
        self.actionSave_Image.setObjectName("actionSave_Image")
        self.action_ROI = QtWidgets.QAction(MainWindow)
        self.action_ROI.setObjectName("action_ROI")
        self.action_showHisto = QtWidgets.QAction(MainWindow)
        self.action_showHisto.setObjectName("action_showHisto")
        self.actionRestoreOriginal = QtWidgets.QAction(MainWindow)
        self.actionRestoreOriginal.setObjectName("actionRestoreOriginal")
        self.action_convertGrayScale = QtWidgets.QAction(MainWindow)
        self.action_convertGrayScale.setObjectName("action_convertGrayScale")
        self.action_thresholding = QtWidgets.QAction(MainWindow)
        self.action_thresholding.setObjectName("action_thresholding")
        self.action_histoEqualization = QtWidgets.QAction(MainWindow)
        self.action_histoEqualization.setObjectName("action_histoEqualization")
        self.action_convertRGB = QtWidgets.QAction(MainWindow)
        self.action_convertRGB.setObjectName("action_convertRGB")
        self.action_boundryDetection = QtWidgets.QAction(MainWindow)
        self.action_boundryDetection.setObjectName("action_boundryDetection")
        self.action_perspectiveTransform = QtWidgets.QAction(MainWindow)
        self.action_perspectiveTransform.setObjectName("action_perspectiveTransform")
        self.action_gaussianFiltering = QtWidgets.QAction(MainWindow)
        self.action_gaussianFiltering.setObjectName("action_gaussianFiltering")
        self.action_medianFiltering = QtWidgets.QAction(MainWindow)
        self.action_medianFiltering.setObjectName("action_medianFiltering")
        self.action_averageFiltering = QtWidgets.QAction(MainWindow)
        self.action_averageFiltering.setObjectName("action_averageFiltering")
        self.action_addNoise = QtWidgets.QAction(MainWindow)
        self.action_addNoise.setObjectName("action_addNoise")
        self.action_bilateralFiltering = QtWidgets.QAction(MainWindow)
        self.action_bilateralFiltering.setObjectName("action_bilateralFiltering")
        self.action_gaussianHighPass = QtWidgets.QAction(MainWindow)
        self.action_gaussianHighPass.setObjectName("action_gaussianHighPass")
        self.action_laplacianFiltering = QtWidgets.QAction(MainWindow)
        self.action_laplacianFiltering.setObjectName("action_laplacianFiltering")
        self.action_affineTransform = QtWidgets.QAction(MainWindow)
        self.action_affineTransform.setObjectName("action_affineTransform")
        self.action_convertHSV = QtWidgets.QAction(MainWindow)
        self.action_convertHSV.setObjectName("action_convertHSV")
        self.action_CornerHarris = QtWidgets.QAction(MainWindow)
        self.action_CornerHarris.setObjectName("action_CornerHarris")
        self.action_FindContours = QtWidgets.QAction(MainWindow)
        self.action_FindContours.setObjectName("action_FindContours")
        self.action_Erosion = QtWidgets.QAction(MainWindow)
        self.action_Erosion.setObjectName("action_Erosion")
        self.action_Dilation = QtWidgets.QAction(MainWindow)
        self.action_Dilation.setObjectName("action_Dilation")
        self.action_Morphology = QtWidgets.QAction(MainWindow)
        self.action_Morphology.setObjectName("action_Morphology")
        self.menuFile.addAction(self.actionOpen_Image)
        self.menuFile.addAction(self.actionSave_Image)
        self.menu.addAction(self.action_convertGrayScale)
        self.menu.addAction(self.action_convertRGB)
        self.menu.addAction(self.action_convertHSV)
        self.menuSetting.addAction(self.action_ROI)
        self.menuSetting.addAction(self.action_showHisto)
        self.menuSetting.addAction(self.menu.menuAction())
        self.menuSetting.addAction(self.actionRestoreOriginal)
        self.menu_2.addAction(self.action_gaussianFiltering)
        self.menu_2.addAction(self.action_medianFiltering)
        self.menu_2.addAction(self.action_averageFiltering)
        self.menu_2.addAction(self.action_bilateralFiltering)
        self.menu_3.addAction(self.action_gaussianHighPass)
        self.menu_3.addAction(self.action_laplacianFiltering)
        self.menuImage_Processing.addAction(self.action_thresholding)
        self.menuImage_Processing.addAction(self.action_histoEqualization)
        self.menuImage_Processing.addAction(self.menu_2.menuAction())
        self.menuImage_Processing.addAction(self.menu_3.menuAction())
        self.menuImage_Processing.addAction(self.action_boundryDetection)
        self.menuImage_Processing.addAction(self.action_perspectiveTransform)
        self.menuImage_Processing.addAction(self.action_addNoise)
        self.menuImage_Processing.addAction(self.action_affineTransform)
        self.menuImage_Processing.addSeparator()
        self.menuImage_Processing.addAction(self.action_CornerHarris)
        self.menuImage_Processing.addAction(self.action_FindContours)
        self.menuImage_Processing.addAction(self.action_Erosion)
        self.menuImage_Processing.addAction(self.action_Dilation)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuSetting.menuAction())
        self.menubar.addAction(self.menuImage_Processing.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "影像處理開發平台"))
        self.menuFile.setTitle(_translate("MainWindow", "檔案"))
        self.menuSetting.setTitle(_translate("MainWindow", "設定"))
        self.menu.setTitle(_translate("MainWindow", "顯示或改變色彩空間"))
        self.menuImage_Processing.setTitle(_translate("MainWindow", "影像處理"))
        self.menu_2.setTitle(_translate("MainWindow", "低通濾波"))
        self.menu_3.setTitle(_translate("MainWindow", "高通濾波"))
        self.actionOpen_Image.setText(_translate("MainWindow", "Open Image"))
        self.actionOpen_Image.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave_Image.setText(_translate("MainWindow", "Save Image"))
        self.actionSave_Image.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_ROI.setText(_translate("MainWindow", "設定ROI"))
        self.action_showHisto.setText(_translate("MainWindow", "顯示直方圖"))
        self.actionRestoreOriginal.setText(_translate("MainWindow", "恢復原始圖片"))
        self.action_convertGrayScale.setText(_translate("MainWindow", "轉換灰階"))
        self.action_thresholding.setText(_translate("MainWindow", "影像二值化"))
        self.action_histoEqualization.setText(_translate("MainWindow", "直方圖等化"))
        self.action_convertRGB.setText(_translate("MainWindow", "轉換RGB"))
        self.action_boundryDetection.setText(_translate("MainWindow", "邊界偵測"))
        self.action_perspectiveTransform.setText(_translate("MainWindow", "透視投影轉換"))
        self.action_gaussianFiltering.setText(_translate("MainWindow", "高斯濾波"))
        self.action_medianFiltering.setText(_translate("MainWindow", "中值濾波"))
        self.action_averageFiltering.setText(_translate("MainWindow", "均值濾波"))
        self.action_addNoise.setText(_translate("MainWindow", "加入影像雜訊"))
        self.action_bilateralFiltering.setText(_translate("MainWindow", "雙邊濾波"))
        self.action_gaussianHighPass.setText(_translate("MainWindow", "高斯高通濾波"))
        self.action_laplacianFiltering.setText(_translate("MainWindow", "拉普拉斯濾波"))
        self.action_affineTransform.setText(_translate("MainWindow", "仿射轉換"))
        self.action_convertHSV.setText(_translate("MainWindow", "轉換HSV"))
        self.action_CornerHarris.setText(_translate("MainWindow", "Corner Harris"))
        self.action_FindContours.setText(_translate("MainWindow", "Find Contours"))
        self.action_Erosion.setText(_translate("MainWindow", "Erosion"))
        self.action_Dilation.setText(_translate("MainWindow", "Dilation"))
        self.action_Morphology.setText(_translate("MainWindow", "Morphology"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
